/*问题 F: 小雏鸟的成人式 1
题目描述
陶行知先生说：“人有两件宝，双手和大脑”。

小雏鸟们经过磨练长大，不仅翅膀要变硬，脑子也要变得更聪明。

编程离不开键盘。敲键盘是有指法的。

以双手的十个手指的初始位置为基准，我们把打字需要移动手指的格数记为“键程”。打字标准指法见下图。


手指的初始键位是 asdf jkl; 每个手指控制的按键见上图，打完一个字符，手指要回到初始键位。 拇指初始键位为空格

我们记一根手指不移动就可以打出的字的键程为0,移动一格打出来的字的键程为1，需要移动两格及以上的键程记为
2.打完字符的回位过程不重复计算键程。

比如，“asdf”的键程为0，“dfer”的键程为2.

请你编写程序，求要将指定的字符串打出来，总键程是多少。

输入
一行字符。可能包括大小写，数字，符号等。全部为半角字符。

输出
对于输入的字符串，求出总键程。请参阅提示部分的描述

样例输入
asdfg
样例输出
1
提示
对于左手小指而言，a的键程为0，键程为一的有q，z，大写键，小指区其他的字符都是键程为2。

题意
如题目描述所示。要注意大写字母是小写+1：题目把大写看成先按“大写锁定”（键程为1），再按那个键，而且不符合常理的事它
按完字母不要把锁定给解除。

思路
坑题！模拟。可用map

代码*/
//这题简直有毒
#include<iostream>
#include<stdio.h>
#include<map>
using namespace std;
int main()
{
    map<char,int> m;
    //键程0
    char a0[] = "asdf jkl\;";
    for(int i = 0; a0[i] != '\0'; i++)
        m[a0[i]] = 0;
    //键程1
    char a1[] = "qwerghuiop'zxcvm,.\/";
    for(int i = 0; a1[i] != '\0'; i++)
        m[a1[i]] = 1;
    //键程2（不含大写字母）
    char a2[] = "：`1234567890-=\\ty[]bn";
    for(int i = 0; a2[i] != '\0'; i++)
        m[a2[i]] = 2;
    //大写字母统一处理：小写字母+1
    for(int i = 0; i < 26; i++)
        m['A'+i] = 1+m['a'+i];
    //键程3（不含大写字母）：shift+键程1的键
    m['\"'] = m['<'] = m['>'] = m['?'] = 3;
    //键程4（不含大写字母）：shift+键程2的键
    char a4[] = "~!@#$%^&*()_+|{}";
    for(int i = 0; a4[i] != '\0'; i++)
        m[a4[i]] = 4;
    //初始化完毕，开始输入数据
    char str[999999];
    gets(str);
    int len = strlen(str);
    int sum = 0;
    for(int i = 0; i < len; i++)
    {
        sum += m[str[i]];
    }
    printf("%d\n",sum);
    return 0;
}
